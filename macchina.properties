#
# OSP Configuration
#
osp.codeCache          = /opt/macchina/var/cache/bundles
osp.bundleRepository   = /opt/macchina/lib/bundles
osp.data               = /opt/macchina/var/lib
osp.web.cacheResources = true
osp.web.sessionManager.cookiePersistence = transient
osp.web.server.port       = ${system.env.HTTP_PORT}
osp.web.server.securePort = ${system.env.HTTPS_PORT}

# Note: unofficial list of V8 options can be found here:
# https://github.com/thlorenz/v8-flags/blob/master/flags-0.11.md
osp.js.v8.flags = --harmony;--use-strict


#
# Settings
#
macchina.settings.path = /opt/macchina/var/lib/settings.properties


#
# Authentication
#
# Note: Password for user "admin" is "admin".
auth.simple.admin.name = edgeadmin
auth.simple.admin.passwordHash = ${system.env.ADMIN_PASSWORD_HASH}
auth.simple.user.name = edgeuser
auth.simple.user.passwordHash = ${system.env.USER_PASSWORD_HASH}
auth.simple.user.permissions =


#
# Serial Ports
#
#serial.ports.1.device = /dev/tty.usbserial
#serial.ports.1.params = 8N1
#serial.ports.1.speed = 57600


#
# Simulated Sensors
#

# A temperature sensor that starts with a value of
# 20 째C and increments every second by 0.2 째C.
# After 100 cycles, the temperature will reset to the
# starting value.
simulation.sensors.temperature1.physicalQuantity = temperature
simulation.sensors.temperature1.physicalUnit = Cel
simulation.sensors.temperature1.initialValue = 20
simulation.sensors.temperature1.delta = 0.2
simulation.sensors.temperature1.cycles = 100
simulation.sensors.temperature1.updateRate = 1
simulation.sensors.temperature1.mode = linear

# Another temperature sensor that starts with a value of
# 25 째C and changes every 10 seconds by a random
# value between 0 and +/- 0.5 째C.
# After 100 cycles, the temperature will reset to the
# starting value.
simulation.sensors.temperature2.physicalQuantity = temperature
simulation.sensors.temperature2.physicalUnit = Cel
simulation.sensors.temperature2.initialValue = 25
simulation.sensors.temperature2.delta = 0.5
simulation.sensors.temperature2.cycles = 100
simulation.sensors.temperature2.updateRate = 0.1
simulation.sensors.temperature2.mode = random

# An ambient light sensor that updates every 2 seconds.
#simulation.sensors.ambientLight1.physicalQuantity = illuminance
#simulation.sensors.ambientLight1.physicalUnit = lx
#simulation.sensors.ambientLight1.initialValue = 100
#simulation.sensors.ambientLight1.delta = 5
#simulation.sensors.ambientLight1.cycles = 100
#simulation.sensors.ambientLight1.updateRate = 0.5
#simulation.sensors.ambientLight1.mode = linear

# A humidity sensor that updates every 5 seconds.
simulation.sensors.humidity1.physicalQuantity = humidity
simulation.sensors.humidity1.physicalUnit = %
simulation.sensors.humidity1.initialValue = 40
simulation.sensors.humidity1.delta = 0.5
simulation.sensors.humidity1.cycles = 20
simulation.sensors.humidity1.updateRate = 0.2
simulation.sensors.humidity1.mode = random

# GNSS Simulation
#simulation.gnss.gpxPath = track.gpx
#simulation.gnss.speedUp = 10.0

webui.gnsstracking.refresh = 2


#
# SensorLog
#
sensorlog.sensors.illuminance.id = io.macchina.simulation.sensor#0
sensorlog.sensors.temperature.id = io.macchina.simulation.sensor#2
sensorlog.sensors.humidity.query = name == "io.macchina.simulation.sensor#1"


#
# MQTT
#
# Create a MQTT client that connects to the MQTT test server
# provided by the Eclipse Mosquitto project.
mqtt.clients.mosquitto.serverURI = tcp://test.mosquitto.org:1883
mqtt.clients.mosquitto.clientId = ${system.nodeId}

mqtt.clients.hivemq.serverURI = tcp://broker.hivemq.com
mqtt.clients.hivemq.clientId = ${system.nodeId}


#
# XBee
#
#xbee.ports.1.device = /dev/tty.usbserial-000013FA
#xbee.ports.1.speed = 115200
#xbee.sensors.lth.id = 0013A20040A4D7F7


#
# WebTunnel
#
webtunnel.enable = false
webtunnel.reflectorURI = https://reflector.my-devices.net
webtunnel.deviceName = ${system.nodeName}
webtunnel.domain = c60a3001-05ae-4dd6-a4fa-2ab692a1123f
webtunnel.deviceId = 55eb818b-4526-4943-896f-${system.nodeId}
webtunnel.username = ${webtunnel.deviceId}@${webtunnel.domain}
webtunnel.password =


#
# Logging Configuration
#
# See <http://pocoproject.org/slides/110-Logging.pdf> and
# <http://pocoproject.org/slides/185-LoggingConfiguration.pdf>
# for more information.
#
logging.loggers.root.channel = splitter
logging.loggers.root.level = ${system.env.LOGLEVEL}

logging.loggers.remoting.name = RemotingNG
logging.loggers.remoting.level = notice

logging.channels.file.class = FileChannel
logging.channels.file.pattern = %Y-%m-%d %H:%M:%S.%i [%p] %s<%I>: %t
logging.channels.file.path = ${system.env.LOGPATH}
logging.channels.file.rotation = daily
logging.channels.file.archive = number
logging.channels.file.purgeCount = 10

logging.channels.console.class = ColorConsoleChannel
logging.channels.console.pattern = %Y-%m-%d %H:%M:%S.%i [%p] %s<%I>: %t

logging.channels.webconsole.class = EventChannel

logging.channels.splitter.class = SplitterChannel
logging.channels.splitter.channels = webconsole, ${system.env.LOGCHANNEL}


#
# NetSSL (OpenSSL) Configuration
#
openSSL.server.certificateFile = ${system.env.TLS_SERVER_CERT}
openSSL.server.privateKeyFile = ${system.env.TLS_SERVER_KEY}
openSSL.server.verificationMode = none
openSSL.server.verificationDepth = 9
openSSL.server.loadDefaultCAFile = true
openSSL.server.cipherList = ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
openSSL.server.disableProtocols = sslv2,sslv3
openSSL.server.invalidCertificateHandler.name = AcceptCertificateHandler
openSSL.client.verificationMode = none
openSSL.client.verificationDepth = 9
openSSL.client.loadDefaultCAFile = true
openSSL.client.invalidCertificateHandler.name = RejectCertificateHandler


#
# GPIO Configuration
#
#linux.gpio.enable = true
#linux.gpio.pins.10.direction = out
#linux.gpio.pins.11.direction = in
